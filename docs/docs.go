// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://vk.com/b.larkin",
            "email": "borislarkin18@mail.ru"
        },
        "license": {
            "name": "AS IS (NO WARRANTY)"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/forecast/add": {
            "post": {
                "description": "very very friendly response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forecasts"
                ],
                "summary": "Add forecast to the list",
                "parameters": [
                    {
                        "description": "New forecast data",
                        "name": "forecast",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.ForecastRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.Forecasts"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/forecast/delete/{id}": {
            "delete": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forecasts"
                ],
                "summary": "Delete a specified forecast by its ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Forecast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/forecast/edit/{id}": {
            "put": {
                "description": "very very friendly response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forecasts"
                ],
                "summary": "Edit forecast",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Forecast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New forecast data",
                        "name": "forecast",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.ForecastRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.ForecastRequest"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ds.Forecasts"
                        }
                    }
                }
            }
        },
        "/forecast/to_pred/{forecast_id}": {
            "post": {
                "description": "If there` + "`" + `s no draft found, a new draft is to be created.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Preds_Forecs"
                ],
                "summary": "Add forecast to current user` + "`" + `s draft prediction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Forecast ID",
                        "name": "forecast_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.PredictionWithForecasts"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/forecast/{id}": {
            "get": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forecasts"
                ],
                "summary": "Get a specified forecast by its ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Forecast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.ForecastResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/forecast/{id}/add_picture": {
            "post": {
                "description": "very very friendly response",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Forecasts"
                ],
                "summary": "Add image to specified forecast",
                "parameters": [
                    {
                        "type": "file",
                        "description": "New image for the forecast",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Forecast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/forecasts": {
            "get": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forecasts"
                ],
                "summary": "Show all available forecasts filtered by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name filter",
                        "name": "forecast_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.GetForecastsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/pr_fc/edit/{prediction_id}/{forecast_id}": {
            "put": {
                "description": "An error is returned in cases of unauthorized actions being attempted",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Preds_Forecs"
                ],
                "summary": "Edit forecast` + "`" + `s input data for specified prediction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Forecast ID",
                        "name": "forecast_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Prediction ID",
                        "name": "prediction_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.UpdatePred_ForecInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.Preds_Forecs"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/pr_fc/remove/{prediction_id}/{forecast_id}": {
            "delete": {
                "description": "An error is returned in cases of unauthorized actions being attempted",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Preds_Forecs"
                ],
                "summary": "Delete forecast from specified prediction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Forecast ID",
                        "name": "forecast_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Prediction ID",
                        "name": "prediction_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/prediction/delete/{id}": {
            "delete": {
                "description": "Method sets prediction` + "`" + `s status to \"deleted\" without actually removing it from the db model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Delete specified prediction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prediction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/prediction/edit/{id}": {
            "put": {
                "description": "very very friendly response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Edit specified prediction` + "`" + `s prediction amount \u0026 window",
                "parameters": [
                    {
                        "description": "New prediction data",
                        "name": "prediction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.EditPredReq"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Prediction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.PredictionWithForecasts"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/prediction/finish/{id}": {
            "put": {
                "description": "Can be ended with statuses: [\"denied\", \"completed\"]",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Finish specified prediction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prediction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status to be set",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.PredictionWithForecasts"
                        }
                    },
                    "409": {
                        "description": "Conflict"
                    }
                }
            }
        },
        "/prediction/form/{id}": {
            "put": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Form specified prediction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prediction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.PredictionWithForecasts"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/prediction/{id}": {
            "get": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Display a prediction and its forecasts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prediction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.PredictionWithForecasts"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/predictions": {
            "get": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Show all predictions made for current user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prediction status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Earliest date created filter: YYYY-Mon-DD",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Latest date created filter: YYYY-Mon-DD",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ds.PredictionWithUsers"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "very very friendly response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login the specified user",
                "parameters": [
                    {
                        "description": "user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.loginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.loginResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Logout the current user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "very very friendly response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register the specified user",
                "parameters": [
                    {
                        "description": "New user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.registerReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.registerResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/update/{id}": {
            "put": {
                "description": "very very friendly response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update the specified user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Auth Bearer token header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.updateResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "ds.ForecastRequest": {
            "type": "object",
            "required": [
                "color",
                "descr",
                "ext_desc",
                "measure_type",
                "short_title",
                "title"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "ext_desc": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "measure_type": {
                    "type": "string"
                },
                "short_title": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ds.ForecastResponse": {
            "type": "object",
            "required": [
                "color",
                "descr",
                "ext_desc",
                "forecast_id",
                "image",
                "measure_type",
                "short_title",
                "title"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "ext_desc": {
                    "type": "string"
                },
                "forecast_id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "measure_type": {
                    "type": "string"
                },
                "short_title": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ds.ForecastResponseWithFlags": {
            "type": "object",
            "required": [
                "color",
                "descr",
                "ext_desc",
                "forecast_id",
                "image",
                "input",
                "measure_type",
                "result",
                "short_title",
                "title"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "ext_desc": {
                    "type": "string"
                },
                "forecast_id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "measure_type": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "short_title": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ds.Forecasts": {
            "type": "object",
            "required": [
                "color",
                "descr",
                "ext_desc",
                "forecast_id",
                "measure_type",
                "short_title",
                "title"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "ext_desc": {
                    "type": "string"
                },
                "forecast_id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "measure_type": {
                    "type": "string"
                },
                "short_title": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ds.GetForecastsResponse": {
            "type": "object",
            "required": [
                "forecasts",
                "prediction_id",
                "prediction_size"
            ],
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.Forecasts"
                    }
                },
                "forecasts_empty": {
                    "type": "boolean"
                },
                "prediction_id": {
                    "type": "string"
                },
                "prediction_size": {
                    "type": "integer"
                }
            }
        },
        "ds.PredictionWithForecasts": {
            "type": "object",
            "required": [
                "forecasts",
                "prediction"
            ],
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.ForecastResponseWithFlags"
                    }
                },
                "prediction": {
                    "$ref": "#/definitions/ds.Predictions"
                }
            }
        },
        "ds.PredictionWithUsers": {
            "type": "object",
            "required": [
                "prediction",
                "username"
            ],
            "properties": {
                "prediction": {
                    "$ref": "#/definitions/ds.Predictions"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ds.Predictions": {
            "type": "object",
            "properties": {
                "creator_id": {
                    "type": "integer"
                },
                "date_completed": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_formed": {
                    "type": "string"
                },
                "prediction_amount": {
                    "type": "integer"
                },
                "prediction_id": {
                    "type": "integer"
                },
                "prediction_window": {
                    "type": "integer"
                },
                "qr": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ds.Preds_Forecs": {
            "type": "object",
            "required": [
                "forecast_id",
                "prediction_id",
                "preds_forecs_id"
            ],
            "properties": {
                "forecast": {
                    "$ref": "#/definitions/ds.Forecasts"
                },
                "forecast_id": {
                    "type": "integer"
                },
                "input": {
                    "type": "string"
                },
                "prediction": {
                    "$ref": "#/definitions/ds.Predictions"
                },
                "prediction_id": {
                    "type": "integer"
                },
                "preds_forecs_id": {
                    "type": "integer"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "ds.Role": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Guest",
                "User",
                "Moderator"
            ]
        },
        "ds.UpdatePred_ForecInput": {
            "type": "object",
            "required": [
                "input"
            ],
            "properties": {
                "input": {
                    "type": "string"
                }
            }
        },
        "handler.EditPredReq": {
            "type": "object",
            "required": [
                "prediction_amount",
                "prediction_window"
            ],
            "properties": {
                "prediction_amount": {
                    "type": "integer"
                },
                "prediction_window": {
                    "type": "integer"
                }
            }
        },
        "handler.loginReq": {
            "type": "object",
            "required": [
                "guest",
                "login",
                "password"
            ],
            "properties": {
                "guest": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.loginResp": {
            "type": "object",
            "required": [
                "access_token",
                "expires_in",
                "login",
                "role",
                "token_type"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "handler.registerReq": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.registerResp": {
            "type": "object",
            "required": [
                "ok"
            ],
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "handler.updateReq": {
            "type": "object",
            "required": [
                "login",
                "password",
                "role"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/ds.Role"
                }
            }
        },
        "handler.updateResp": {
            "type": "object",
            "required": [
                "login",
                "role",
                "uid"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/ds.Role"
                },
                "uid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Forecast system",
	Description:      "Bmstu Open IT Platform",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
